//
//  ViewController.swift
//  UploadImage
//
//  Created by Akash Soni on 08/10/19.
//  Copyright Â© 2019 Akash Soni. All rights reserved.
//

import UIKit

class ViewController: UIViewController,UINavigationControllerDelegate,UIImagePickerControllerDelegate {
    
    @IBOutlet weak var imageView: UIImageView!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    
    @IBAction func uploadTapped(_ sender: UIButton) {
        let imagePickerView = UIImagePickerController()
        imagePickerView.delegate = self
        imagePickerView.allowsEditing = true
        imagePickerView.sourceType = .photoLibrary
        self.present(imagePickerView, animated: true, completion: nil)
    }
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {
        print("cancel tapped")
        self.dismiss(animated: true, completion: nil)
    }
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        guard let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage else { return }
        imageView.image = image
        var request  = URLRequest(url: URL(string: "http://clients.aksinteractive.com/a4a-new/member-apis/Users/profileUpdate")!)
        request.httpMethod = "POST"
        let boundary = "Boundary-\(UUID().uuidString)"
        request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
        let params = [         "sessToken":"$2y$10$rCfiYyNQudh5UQVT1f4vwu.sPtsOPrJQHftLOt6PpuRaljbnlnFgu",
                               "userId":"124",
                               "firstName":"Yatin",
                               "lastName":"Yatin",
                               "city":"135",
                               "address":"test",
                               "dateOfBirth":"2006-08-16",
                               "dateOfAnniversary":"2013-08-13",
                               "spouseName":"xyz",
        ]
        request.httpBody = createBodyWithParameters(param: params, filePathKey: "userImg", imageDataKey: image.jpegData(compressionQuality: 0.2)!, boundary: boundary,filename: "image.jpeg")
        
        let configuration = URLSessionConfiguration.default
        let task = URLSession(configuration: configuration).dataTask(with: request) {  (data, response, error) in
            print("reached")
            if error != nil{
                DispatchQueue.main.async {
                    let alert = UIAlertController(title: "Error", message: "Error while upload.", preferredStyle: .alert)
                    let action = UIAlertAction(title: "Ok", style: .default, handler: nil)
                    alert.addAction(action)
                    self.present(alert, animated: true, completion: nil)
                }
                
            }else{
                DispatchQueue.main.async {
                    print(String(data: (data)!, encoding: .utf8))
                    let alert = UIAlertController(title: "Uploaded", message: "Successfully uploaded image.", preferredStyle: .alert)
                    let action = UIAlertAction(title: "Ok", style: .default, handler: nil)
                    alert.addAction(action)
                    self.present(alert, animated: true, completion: nil)
                }
            }
        }
        task.resume()
        
        self.dismiss(animated: true, completion: nil)
    }
    
    
    func createBodyWithParameters(param:[String:String]?, filePathKey: String?, imageDataKey: Data, boundary: String, filename: String) -> Data {
        var body = Data()
        
        if(param != nil) {
            for (key,value) in param! {
                body.appendString(string: "--\(boundary)\r\n")
                body.appendString(string: "Content-Disposition: form-data; name=\"\(key)\"\r\n\r\n")
                body.appendString(string: "\(value)\r\n")
            }
        }
        
        let mimeype = "image/jpg"
        
        body.appendString(string: "--\(boundary)\r\n")
        //      body.appendString(string: "Content-Disposition: form-data; name=\"\(filePathKey!)\"; filename=\(filename)\"\r\n")
        body.appendString(string: "Content-Disposition: form-data; name=\"\(filePathKey!)\"; filename=\(filename)\r\n")
        body.appendString(string: "Content-Type : \(mimeype)\r\n\r\n")
        body.append(imageDataKey)
        body.appendString(string: "\r\n")
        
        body.appendString(string: "--\(boundary)--\r\n")
        return body
    }
}


extension Data {
        mutating func appendString(string string: String) {
            let data = string.data(using: .utf8, allowLossyConversion: true)
            append(data!)
        }
}
