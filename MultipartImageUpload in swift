//
//  ViewController.swift
//  UploadImage
//
//  Created by Akash Soni on 08/10/19.
//  Copyright Â© 2019 Akash Soni. All rights reserved.
//

import UIKit

class ViewController: UIViewController,UINavigationControllerDelegate,UIImagePickerControllerDelegate {
    
    @IBOutlet weak var imageView: UIImageView!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    
    @IBAction func uploadTapped(_ sender: UIButton) {
        let imagePickerView = UIImagePickerController()
        imagePickerView.delegate = self
        imagePickerView.allowsEditing = true
        imagePickerView.sourceType = .photoLibrary
        self.present(imagePickerView, animated: true, completion: nil)
    }
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {
        print("cancel tapped")
        self.dismiss(animated: true, completion: nil)
    }
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        guard let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage else { return }
        imageView.image = image
        var request  = URLRequest(url: URL(string: "http://clients.aksinteractive.com/a4a-new/member-apis/Users/profileUpdate")!)
        request.httpMethod = "POST"
        let boundary = "Boundary-\(UUID().uuidString)"
        request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
        let params = [         "sessToken":"$2y$10$rCfiYyNQudh5UQVT1f4vwu.sPtsOPrJQHftLOt6PpuRaljbnlnFgu",
                               "userId":"124",
                               "firstName":"Yatin",
                               "lastName":"Yatin",
                               "city":"135",
                               "address":"test",
                               "dateOfBirth":"2006-08-16",
                               "dateOfAnniversary":"2013-08-13",
                               "spouseName":"xyz",
        ]
        request.httpBody = createBody(parameters: params,
                                boundary: boundary,
                                data:image.jpegData(compressionQuality: 0.5)!,
                                mimeType: "image/jpg",
                                filename: "hello.jpg")
        
        let configuration = URLSessionConfiguration.default
        let task = URLSession(configuration: configuration).dataTask(with: request) {  (data, response, error) in
            print("reached")
        }
        task.resume()
        
        self.dismiss(animated: true, completion: nil)
    }
    
    func createBody(parameters: [String: String],
                    boundary: String,
                    data: Data,
                    mimeType: String,
                    filename: String) -> Data {
        var body = Data()
        
        let boundaryPrefix = "--\(boundary)\r\n"
        
        for (key, value) in parameters {
            body.appendString(boundaryPrefix)
            body.appendString("Content-Disposition: form-data; name=\"\(key)\"\r\n\r\n")
            body.appendString("\(value)\r\n")
        }
        
        body.appendString(boundaryPrefix)
        body.appendString("Content-Disposition: form-data; name=\"file\"; filename=\"\(filename)\"\r\n")
        body.appendString("Content-Type: \(mimeType)\r\n\r\n")
        body.append(data)
        body.appendString("\r\n")
        body.appendString("--".appending(boundary.appending("--")))
        
        return body as Data
    }
}


extension Data {
        mutating func appendString(_ string: String) {
            let data = string.data(using: .utf8, allowLossyConversion: true)
            append(data!)
        }
}
